@inject IAssignmentServiceUI _assignmentServiceUI


<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Create new task</MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="assignment.Title" Variant="Variant.Outlined" HelperText="Enter task title"
            class="form-control mv-2" />
        <MudTextField @bind-Value="assignment.Description" Variant="Variant.Outlined"
            HelperText="Enter task description" class="form-control mv-2" Lines="3" />

    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="CreateAssignment">Create task</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter]
    public long GroupId { get; set; } = default;
    [Parameter]
    public EventCallback<Domain.Assignment> OnTaskCreated { get; set; }

    Domain.Assignment assignment = new();
    protected async Task CreateAssignment()
    {
        try
        {

            Domain.Assignment createdAssignment = await _assignmentServiceUI.CreateAssignment(GroupId, assignment);
            await OnTaskCreated.InvokeAsync(createdAssignment);
            MudDialog.Close(DialogResult.Ok(createdAssignment));
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
            MudDialog.Close();
        }
}

}