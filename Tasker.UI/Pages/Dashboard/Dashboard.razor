@page "/dashboard"
@using System.Security.Claims
@attribute [Authorize]

@inject AuthenticationStateProvider _authenticationStateProvider
@inject IUserServiceUI _userServiceUI


<PageTitle>Dashboard</PageTitle>
@if (CurrentUser is not null)
{
    <h3>Welcome, @CurrentUser.FirstName @CurrentUser.LastName!</h3>
}
<GroupList />

@code {
    private User? CurrentUser { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        ClaimsPrincipal? user = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User;
        string userId = user.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value!;

        try 
        {
            CurrentUser = await _userServiceUI.GetUserById(userId);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
            CurrentUser = new User { FirstName = "Failed", LastName = "Authorization" };
        }
    }
}