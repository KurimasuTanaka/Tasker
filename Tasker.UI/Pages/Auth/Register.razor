@page "/register"
@inject IAuthServiceUI _authServiceUI
@inject NavigationManager _navigation

@attribute [AllowAnonymous]

<MudText Typo="Typo.h4">Register</MudText>

<MudPaper Elevation="3" Outlined="true" Class="pa-10 ma-2">
    <MudForm Model="registerModel">

        <MudTextField Variant="Variant.Outlined" HelperText="First Name" @bind-Value="registerModel.FirstName" />
        <MudTextField Variant="Variant.Outlined" HelperText="Last Name" @bind-Value="registerModel.LastName" />
        <MudTextField Variant="Variant.Outlined" HelperText="Email" @bind-Value="registerModel.Email" />
        <MudTextField Variant="Variant.Outlined" HelperText="Password" type="password"
            @bind-Value="registerModel.Password" />
        <MudText Color="Color.Error">@errorMessage</MudText>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Type="submit" @onclick="HandleRegistration">Register</MudButton>
    </MudForm>
</MudPaper>

@code {
    RegisterModel registerModel = new RegisterModel();
    string errorMessage = string.Empty;

    async Task HandleRegistration()
    {
        registerModel.FirstName = registerModel.FirstName.Trim();
        registerModel.LastName = registerModel.LastName.Trim();
        registerModel.Email = registerModel.Email.Trim();

        string registrationString = await _authServiceUI.Register(registerModel);
        if (registrationString is "Authorized successfully") _navigation.NavigateTo("/");   
        else errorMessage = registrationString;
    }
}